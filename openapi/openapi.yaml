---
openapi: 3.1.0
info:
  title: Recipe Wizard
  summary: A grocery list aggregator to simplify shoppping for recipes.
  contact:
    name: Seth Norman
    email: snorman7384@gmail.com
  version: 0.1.0
servers:
- url: https://recipe-wizard.snorm.dev/v1
  description: Production Server
paths:
  "/ping":
    get:
      summary: Check the server is responding to requests
      operationId: ping
      responses:
        '200':
          description: the server responds successfully with 'pong!'
          content:
            text/plain:
              schema:
                type: string
        default:
          description: the server does not respond
  "/users":
    post:
      summary: Create a new user with a username and password
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
              - username
              - password
              properties:
                username:
                  type: string
                password:
                  type: string
                first_name:
                  type: string
                last_name:
                  type: string
                expires_in_seconds:
                  type: integer
      responses:
        '201':
          description: The user was successfully created and returned.
          content:
            application/json:
              schema:
                type: object
                required:
                - id
                - created_at
                - updated_at
                - username
                - first_name
                - last_name
                - token
                properties:
                  id:
                    type: integer
                    format: int64
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  username:
                    type: string
                  first_name:
                    type: string
                  last_name:
                    type: string
                  token:
                    type: string
        default:
          description: There was an error creating the user resource
          $ref: '#/components/responses/GeneralError'
  "/login":
    post:
      summary: Submit your login credentials to obtain an access token
      operationId: loginUser
      requestBody:
        required: true
        content:
          application/json:
            schema: 
              type: object
              required:
              - username
              - password
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200': 
          description: The user was successfully logged in
          content:
            application/json: 
              schema:
                type: object
                required: 
                - token
                properties:
                  token:
                    type: string
        default:
          description: There was an error logging in with the given credentials
          $ref: '#/components/responses/GeneralError'
  "/recipes":
    get:
      summary: Get all recipes for the logged in user
      operationId: getRecipesForUser
      parameters:
      - name: return-ingredients
        in: query
        description: Whether to return ingredient data in the response
        allowEmptyValue: true
        schema:
          type: boolean
      responses:
        '200':
          description: All recipes are returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recipe'
        default:
          description: Unable to return all recipes
          $ref: '#/components/responses/GeneralError'
    post:
      summary: Create a new recipe from a URL
      operationId: createRecipeFromUrl
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
              - url
              properties:
                url:
                  type: string
                  format: uri
      responses:
        '201':
          description: The recipe was successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipe'
        default:
          description: There was an error creating the recipe
          $ref: '#/components/responses/GeneralError'
  # "/recipes/{recipe_id}":
  #   get:
  #     summary: Get a single recipe
  #     operationId: getRecipe
  #     parameters:
  #     responses:
  # "/recipes/{recipe_id}/ingredients":
  #   get:
  #     summary: Get all ingredients for a recipe
  #     operationId: getIngredientsForRecipe
  #     parameters:
  #     responses:
  # "/grocery-lists":
  #   get:
  #     summary: Get all grocery lists for a user
  #     operationId: getGroceryListsForUser
  #     parameters:
  #     responses:
  #   post:
  #     summary: Create a new grocery list
  #     operationId: createGroceryList
  #     parameters:
  #     requestBody:
  #     responses:
  # "/grocery-lists/{grocery_list_id}":
  #   get:
  #     summary: Get a single grocery list
  #     operationId: getGroceryList
  #     parameters:
  #     responses:
  # "/grocery-lists/{grocery_list_id}/recipes":
  #   get:
  #     summary: Get all instanced recipes in the grocery list
  #     operationId: getRecipeInstancesForGroceryList
  #     parameters:
  #     responses:
  #   post:
  #     summary: Create a recipe instance of the recipe for the grocery list
  #     operationId: createRecipeInstanceForGroceryList
  #     parameters:
  #     requestBody:
  #     responses:
  # "/grocery-lists/{grocery_list_id}/ingredients":
  #   get:
  #     summary: Get all instanced ingredients in the grocery list
  #     operationId: getIngredientInstancesForGroceryList
  #     parameters:
  #     responses:
components:
  schemas:
    Recipe:
      type: object
      required: [id, created_at, updated_at, name, owner_id]
      properties:
        id:
          type: integer
          format: int64
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        name:
          type: string
        description:
          type: string
        url:
          type: string
          format: uri
        prep_time:
          type: string
        cook_time:
          type: string
        total_time:
          type: string
        owner_id:
          type: integer
          format: int64
        # ingredients:
        #   type: array
        #   items:
        #     $ref: '#/components/schemas/Ingredient'
    GeneralError:
      type: object
      required:
      - error
      properties:
        error:
          type: string
  responses:
    GeneralError:
      description: An error has occurred
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GeneralError'
          examples:
            errNotFound:
              summary: The requested resource does not exist
              value:
                error: The requested resource does not exist
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT 
security:
- bearerAuth: []
