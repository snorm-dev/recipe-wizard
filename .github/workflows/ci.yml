name: ci

on:
  pull_request: 
    branches: [main]

jobs:
  tests:
    name: tests
    runs-on: ubuntu-latest

    steps:
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.20"

      - name: Check out code
        uses: actions/checkout@v3

      - name: Run unit tests
        run: go test ./... -cover

      - name: Install gosec
        run: go install github.com/securego/gosec/v2/cmd/gosec@latest

      - name: Run security tests
        run: gosec ./...

  formatting:
    name: formatting
    runs-on: ubuntu-latest

    steps:
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.20"

      - name: Check out code
        uses: actions/checkout@v3

      - name: Check formatting
        run: test -z $(go fmt ./...)

      - name: Install staticcheck
        run: go install honnef.co/go/tools/cmd/staticcheck@latest

      - name: Check linting
        run: staticcheck ./...
  build-docs:
    name: build-docs
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Check if openapi spec chnaged
        id: isEmpty
        run: test -z $(git diff openapi/)
        continue-on-error: true

      - name: Set up npx
        if: failure() && steps.isEmpty.conclusion == 'failure'
        uses: actions/setup-node@v4
        with:
          cache-dependency-path: ./openapi/package.json

      - name: Generate docs
        id: docs
        if: failure() && steps.isEmpty.conclusion == 'failure'
        run: |
          cd openapi
          npx @redocly/cli build-docs openapi.yaml

      - name: Commit and push changes
        if: failure() && steps.isEmpty.conclusion == 'failure' && steps.docs.conclusion == 'success'
        run: |        
          git add redoc-static.html
          git commit -m "Autogenerated Docs updated"
          git push
        
