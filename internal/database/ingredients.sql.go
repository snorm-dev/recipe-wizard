// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.20.0
// source: ingredients.sql

package database

import (
	"context"
	"database/sql"
	"time"
)

const createIngredient = `-- name: CreateIngredient :exec
INSERT INTO ingredients(id, created_at, updated_at, name, description)
VALUES (?, ?, ?, ?, ?)
`

type CreateIngredientParams struct {
	ID          int64
	CreatedAt   time.Time
	UpdatedAt   time.Time
	Name        string
	Description sql.NullString
}

func (q *Queries) CreateIngredient(ctx context.Context, arg CreateIngredientParams) error {
	_, err := q.db.ExecContext(ctx, createIngredient,
		arg.ID,
		arg.CreatedAt,
		arg.UpdatedAt,
		arg.Name,
		arg.Description,
	)
	return err
}

const getIngredient = `-- name: GetIngredient :one
SELECT id, created_at, updated_at, name, description FROM ingredients
WHERE id = ?
`

func (q *Queries) GetIngredient(ctx context.Context, id int64) (Ingredient, error) {
	row := q.db.QueryRowContext(ctx, getIngredient, id)
	var i Ingredient
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.Name,
		&i.Description,
	)
	return i, err
}
